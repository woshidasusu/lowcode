"use strict";(self["webpackChunklowcode"]=self["webpackChunklowcode"]||[]).push([[2200],{42200:function(e,t,a){a.r(t),a.d(t,{default:function(){return c}});var i=function(){var e=this,t=e._self._c;return t("el-form-item",{attrs:{label:e.formTemplate.label,prop:e.parentModelName+e.formTemplate.name,"label-width":e.formTemplate.labelWidth,required:!!+e.formTemplate.required,rules:[...e.formTemplate.validateRules||[],{required:!!+e.formTemplate.required,message:e.formTemplate.label+"不能为空"}]}},[t("el-select",e._g(e._b({style:{width:e.formTemplate.width||"100%"},attrs:{width:"100%","right-icon":"search","init-data":e.initData,label:e.fieldConfig.key||"name",value:e.fieldConfig.value||"id","remote-method":e.callRemoteMethod,placeholder:e.formTemplate.placeholder||`请选择${e.formTemplate.label||""}`,multiple:!!+e.formTemplate.multiple,disabled:!!+e.formTemplate.disabled,clearable:!!+e.formTemplate.clearable,size:"medium"},model:{value:e.model,callback:function(t){e.model=t},expression:"model"}},"el-select",e.formTemplate.$props,!1),e.onEvents))],1)},o=[];const l=window.__debug_log__,r=(...e)=>{l&&console.log("[search]：",...e)};var s={components:{},inject:["getStore"],props:{metadata:{type:Object,require:!0},formModel:{type:Object,default:()=>({})},parentModelName:{type:String,default:""}},data(){return{defaultFieldConfig:{key:"id",value:"name"},insideModel:"",initData:[]}},computed:{formTemplate(){return this.metadata||{}},fieldConfig(){return this.metadata&&this.metadata.dataSource&&this.metadata.dataSource.fieldConfig||this.defaultFieldConfig},model:{get(){return this.formTemplate.name?this.formModel[this.formTemplate.name]:this.insideModel},set(e){this.formTemplate.name&&(this.formModel[this.formTemplate.name]=e),this.insideModel=e}},coreProcessor(){return this.getStore()?.state()?.coreProcessor},onEvents(){const e={};return this.metadata?._id&&(e.selected=this.handleEvent.bind(this,"change",this.metadata._id),this.metadata?.$on?.forEach((t=>{e[t]=this.handleEvent.bind(this,t,this.metadata._id)}))),e}},watch:{metadata:{handler:function(e){this.parseMetadata()},immediate:!0},model:{handler:function(e){const t=this.formTemplate.backfillName;e&&t&&this.formModel[t]&&(this.initData=[{[this.fieldConfig.key]:this.formModel[t],[this.fieldConfig.value]:e}])},immediate:!0}},methods:{async parseMetadata(){this.validateMetadata()&&(r("validateMetadata() return true"),await this.parseInitOptions())},validateMetadata(){return!(!this.metadata||"object"!==typeof this.metadata)},handleEvent(e,t,a){"change"===e&&this.formTemplate.backfillName&&(this.formModel[this.formTemplate.backfillName]=a&&a[this.fieldConfig.key]),this.$emit("event",e,t,a)},async parseInitOptions(){const{initOptions:e}=this.formTemplate;if(e){const{conditions:t,conditionType:a}=e,i=await this.coreProcessor.parseConditions(t,a);if(i){const{type:t="single"}=e;if("single"===t){const{labelDataSource:t,valueDataSource:a}=e,i=await this.coreProcessor.parseDataSource(t),o=await this.coreProcessor.parseDataSource(a);this.initData=[{[this.fieldConfig.key||"name"]:i,[this.fieldConfig.value||"id"]:o}]}else if("multiple"===t){const{dataSource:t}=e;let a=await this.coreProcessor.parseDataSource(t);a=a||[];const{fieldConfig:i}=t;if(i){const{key:e="name",value:t="id"}=i;a=a.map((a=>({[this.fieldConfig.key||"name"]:a[e],[this.fieldConfig.value||"id"]:a[t]})))}this.initData=a}}}},async callRemoteMethod(e="",t=1){if(this.metadata.dataSource){const a={},i=this.metadata.dataSource.params||[];Object.assign(a,this.metadata.dataSource,{params:[...i,{key:"keyword",value:e.trim()},{key:"page",value:t}]});const o=await this.coreProcessor.parseDataSource(a);return o||[]}return[]}}},d=s,n=a(9512),m=(0,n.Z)(d,i,o,!1,null,"83b99b9e",null),c=m.exports}}]);